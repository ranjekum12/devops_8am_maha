- name: copy adhoc task v8 js
  template:
    src: set_ims_v8.js.j2
    dest: /tmp/set_ims_v8.js

- name: Get the instance name
  shell: ls /usr/local/neolane/nl6/conf/config-*xml | grep -v default|grep -v tracking | grep -v backup| grep -v orig | grep -v original | cut -d "-" -f 2- | sed "s/.xml//g"
  become: yes
  register: instance_name

- debug:
    msg: "{{ instance_name.stdout }}"

- name: Execute JS for setting 
  shell: nlserver javascript -instance:"{{ instance_name.stdout }}" -file /tmp/set_ims_v8.js
  environment: "{{ neolane_env }}"
  register: runbook_output

- name: serverconf file output
  shell: >
    if grep -q 'pipelined.*authPrivateKey=""' /usr/local/neolane/nl6/conf/config-{{ instance_name.stdout }}.xml> /dev/null; then
         echo "found key"
    else
         echo "Not found the key"
    fi
  register: con1
  

- name: serverconf file output
  shell: >
    if grep -q 'pipelined.*authPrivateKey=""' /usr/local/neolane/nl6/conf/serverConf.xml> /dev/null; then
         echo "empty"
    else
         echo "Non empty"
    fi
  register: serv1


- name: Check the output of the test js runbook
  debug:
    msg: "{{ runbook_output.stdout }} :  {{ con1.stdout }} : {{ serv1.stdout }}"

- name: save the output in file
  lineinfile:
    path: /tmp/file.txt
    line: "{{ inventory_hostname }} :\n {{ runbook_output.stdout }}:\n {{con1.stdout}}:\n {{serv1.stdout}}"
    insertafter: "EOF"
    create: yes
  delegate_to: localhost
  become: no

- name: Cleaning file
  file:
    dest: /tmp/set_ims_v8.js
    state: absent
